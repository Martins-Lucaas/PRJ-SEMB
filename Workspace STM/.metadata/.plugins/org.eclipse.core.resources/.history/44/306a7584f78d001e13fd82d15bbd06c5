#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
    : FrontendApplicationBase(m, heap)
{
}
#include "stm32f4xx_hal.h"

extern "C" {
void SystemClock_Config(void);
void Error_Handler(void);
}

// Defina os identificadores dos botões
#define bt_sair  GUI_ID_USER + 0
#define bt_oxy   GUI_ID_USER + 1
#define bt_temp  GUI_ID_USER + 2
#define bt_emg   GUI_ID_USER + 3

// Protótipos de funções

// Função principal
int main(void) {
  HAL_Init();
  SystemClock_Config();

// Callback para manipular eventos da GUI
static void _cbDialog(WM_MESSAGE * pMsg) {
  switch (pMsg->MsgId) {
    case WM_PAINT:
      GUI_SetBkColor(GUI_BLACK);
      GUI_Clear();
      break;
    case WM_NOTIFY_PARENT:
      if (pMsg->Data.v == WM_NOTIFICATION_CLICKED) {
        // Identifique qual botão foi clicado
        switch (WM_GetId(pMsg->hWinSrc)) {
          case ID_BUTTON_SAIR:
            // Lógica para o botão sair
            break;
          case ID_BUTTON_OXY:
            // Lógica para o botão de oxigênio
            break;
          case ID_BUTTON_TEMP:
            // Lógica para o botão de temperatura
            break;
          case ID_BUTTON_EMG:
            // Lógica para o botão de emergência
            break;
          default:
            break;
        }
      }
      break;
    default:
      WM_DefaultProc(pMsg);
      break;
  }
}
