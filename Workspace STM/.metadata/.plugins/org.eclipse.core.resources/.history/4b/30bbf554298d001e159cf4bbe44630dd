/*
 * eletromio_adc.c
 *
 *  Created on: Nov 27, 2023
 *      Author: lucas
 */

#include <stdio.h>
#include <string.h>
#include <stdint.h>
#include "main.h"

extern TIM_HandleTypeDef hadc1;



void exti0(void){
	HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
	HAL_NVIC_DisableIRQ(EXTI0_IRQn);
	HAL_NVIC_ClearPendingIRQ(EXTI0_IRQn);
	HAL_TIM_Base_Start_IT(&htim2);
}

void emg_system(void)
{
	//uint16_t emgplot = 0;
	//char buffer[20];
	HAL_ADC_Start(&hadc1);
	HAL_ADC_Stop(&hadc1);
	HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout);
}


extern TIM_HandleTypeDef htim3;
extern TIM_HandleTypeDef htim2;
uint8_t press = 0;


void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
	switch(GPIO_Pin){
	case GPIO_PIN_0:
		switch(press){
		case 0:
			press = 1;
			__HAL_TIM_SET_AUTORELOAD(&htim3, 9999);
			HAL_TIM_Base_Start_IT(&htim3);
			exti0();
			break;
		case 1:
			press = 2;
			__HAL_TIM_SET_AUTORELOAD(&htim3, 19999);
			HAL_TIM_Base_Start_IT(&htim3);
			exti0();
			break;
		case 2:
			press = 3;
			__HAL_TIM_SET_AUTORELOAD(&htim3, 29999);
			HAL_TIM_Base_Start_IT(&htim3);
			exti0();
			break;
		case 3:
			press = 4;
			__HAL_TIM_SET_AUTORELOAD(&htim3, 39999);
			HAL_TIM_Base_Start_IT(&htim3);
			exti0();
			break;
		case 4:
			press = 0;
			exti0();
			HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
			HAL_TIM_Base_Stop_IT(&htim3);
			break;
		}
		break;
	case GPIO_PIN_1:
		//codigo
		break;
	}
}

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
	if(htim == &htim2){
		HAL_NVIC_EnableIRQ(EXTI0_IRQn);
		HAL_TIM_Base_Stop_IT(&htim2);
	}

	if(htim == &htim3){
		HAL_GPIO_TogglePin(LED_GPIO_Port,Â LED_Pin);
	}
}
